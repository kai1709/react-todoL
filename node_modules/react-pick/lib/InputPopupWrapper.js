"use strict";

var React = require("react/addons");

var _React$addons = React.addons;
var PureRenderMixin = _React$addons.PureRenderMixin;
var cloneWithProps = _React$addons.cloneWithProps;

var joinClasses = require("react/lib/joinClasses");
var getUniqueId = require("./helpers/getUniqueId");

/**
 * <InputPopupWrapper> enables us to attach a popup menu like <ListPopup>
 * to an <input> element in an WAI ARIA compliant manner.
 */
var InputPopupWrapper = React.createClass({
  displayName: "InputPopupWrapper",

  mixins: [PureRenderMixin],

  propTypes: {
    /**
     * Boolean value that's true when the popup should be open.
     */
    isOpen: React.PropTypes.bool,

    /**
     * The rendered React element that should be displayed in the popup.
     */
    popupElement: React.PropTypes.element
  },

  getDefaultProps: function getDefaultProps() {
    return {
      isOpen: false,
      popupElement: React.createElement("div", null)
    };
  },

  getInitialState: function getInitialState() {
    return {
      id: getUniqueId("InputPopupWrapper")
    };
  },

  render: function render() {
    return React.createElement(
      "div",
      { className: "InputPopupWrapper" },
      cloneWithProps(React.Children.only(this.props.children), {
        "aria-haspopup": "false",
        "aria-owns": this.state.id,
        "aria-expanded": this.props.isOpen + "",
        className: "InputPopupWrapper-input"
      }),
      React.createElement(
        "div",
        {
          id: this.state.id,
          className: joinClasses("InputPopupWrapper-popup", this.props.isOpen && "InputPopupWrapper-popup--isOpen") },
        this.props.popupElement
      )
    );
  }

});

module.exports = InputPopupWrapper;
